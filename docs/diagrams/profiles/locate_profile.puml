@startuml

skinparam ranksep 10
skinparam linetype ortho

actor User as u

rectangle Directory {

    frame "DFSConfig\nBootstrap" as DFSConfig {
        component "<&link-intact>UserPublicProfile location" as UPub_loc
        component "<&link-intact>UserPrivateProfile location" as UPriv_loc
    }

    database "<b>Profile DB</b>\nRDBMS\nS3\nfilesystem" as profiles_storage {
        rectangle UPub [
        UserPublicProfile
        --
        <&link-intact>publicKeys location
        <&link-intact>inbox location
        ]

        rectangle UPriv [
          UserPrivateProfile
          --
          <&link-intact>keystore location
          <&link-intact>privateStorage location
          <&link-intact>inboxWithFullAccess location
        ]
    }
    rectangle Credentials [
        <b>BucketAccessService</b>
        ---
        Enhance request\nwith credentials\nPerform routing
    ]

    DFSConfig -[hidden]down- profiles_storage
    UPub -[hidden]down- Credentials
    UPriv -[hidden]down- Credentials
}

database "<b>Private files</b>\non remote storage\nS3\nfilesystem" as private_files_storage {
}

rectangle "Write file into private space" as Request {
    rectangle initial [
        WRITE <&file>\n<b>some/file.txt</b>
    ]
    rectangle resolve_profile [
        Where is users' profile?
    ]
    rectangle profile [
        READ <&file>\n<b>file:///host/folder/profile/my_private_profile</b>
    ]
    rectangle retrieve_profile [
        Read users' profile
    ]
    rectangle get_private [
        Extract private files path from profile
    ]
    rectangle PrivateFiles [
        <&file> <b>s3://user-bucket/somewhere/files/private/</b>
    ]
    rectangle ResolveEncrypt [
        Resolve encrypted path\nwithin private space,\nby encrypting relative path:
        **some/file.txt** -encrypt -> **encrypted(some)/encrypted(file.txt)**
        (i.e. some/file.txt -> **jlkfjklja/hjkhjkh**)
        and appending encrypted path to private files root
        s3://bucket/files/private ->
        s3://bucket/files/private/encrypted(some)/encrypted(file.txt)
        (i.e. some/file.txt -> s3://bucket/files/private/**jlkfjklja/hjkhjkh**)
    ]
    rectangle WriteTo [
        WRITE <&file>\n<b>s3://bucket/files/private/encrypted(some)/encrypted(file.txt)</b>
    ]

    initial -[hidden]down- resolve_profile
    resolve_profile -[hidden]down- retrieve_profile
    retrieve_profile -[hidden]down- profile
    profile -[hidden]down- get_private
    get_private -[hidden]down- PrivateFiles
    retrieve_profile -[hidden]down- PrivateFiles
    PrivateFiles -[hidden]down- ResolveEncrypt
    PrivateFiles -[hidden]down- WriteTo
}

u --> initial : **1.** Write <&file> into my private\nspace with path <b>/some/file.txt</b>
initial --> resolve_profile : **2.** find\nusers\nprofile
resolve_profile --> UPriv_loc
UPriv_loc ..> retrieve_profile : **3.** Users' profile location
profile ==> Credentials : **4.** Read\nusers'\nprofile\nfrom storage
Credentials ==> UPriv : **5.** Physical \n\nREAD <&file>\n<b>file:///username:password@host/folder/profile/my_private_profile</b>\n\n
retrieve_profile --> profile
profile --> get_private
UPriv ..> get_private : **6.** User profile\nthat declares\npaths\nwhere is everything\nowned by user
get_private --> PrivateFiles : **7.** Path to users'\nprivate files root
PrivateFiles --> ResolveEncrypt :  Private\nfiles\nroot
initial --> ResolveEncrypt : Relative\nfile\nlocation:\n **some/file.txt**
ResolveEncrypt --> WriteTo :  **8.** absolute\nresource\nlocation
WriteTo ==> Credentials
Credentials ==> private_files_storage :  **9.** \n\nWRITE <&file>\n<b>s3://user:password@bucket/files/private/encrypted(some)/encrypted(file.txt)\n\n

@enduml
